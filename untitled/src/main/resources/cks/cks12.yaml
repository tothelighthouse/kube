#  ❓12. Rolling Update
#  Cluster: kubectl config use-context k8s Create a deployment as follows:
#  TASK:
#  name: nginx-app
#    Using container nginx with version 1.11.10-alpine The deployment should contain 3 replicas
#    Next, deploy the application with new version 1.11.13-alpine, by performing a rolling update Finally, rollback that update to the previous version 1.11.10-alpine
#    ❗Answer
#    # create
#    kubectl create deployment nginx-app --image=nginx:1.11.10-alpine --replicas=3 --dry-run=client -o yaml > deplyment.yaml cat deplyment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx-app
    name: nginx-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-app
    spec:
      containers:
      - image: nginx:1.11.10-alpine
        name: nginx
        resources: {}
status: {}
#kubectl apply -f deplyment.yaml --record # rolling update
#kubectl set image deployment nginx-app nginx=nginx:1.11.13-alpine --record kubectl rollout history deployment nginx-app
## roll-back
#kubectl rollout undo deployment nginx-app kubectl rollout history deployment nginx-app
